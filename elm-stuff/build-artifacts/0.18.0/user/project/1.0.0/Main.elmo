var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'EndTurn') {
			var gameboard = _user$project$Gameboard$nextTurn(model.gameboard);
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{gameboard: gameboard}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return _elm_lang$core$Native_Utils.crashCase(
				'Main',
				{
					start: {line: 43, column: 20},
					end: {line: 49, column: 53}
				},
				_p0)('TODO: any message but EndTurn');
		}
	});
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$initialModel = {gameboard: _user$project$Gameboard$freshGameboard};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = function (a) {
	return {gameboard: a};
};
var _user$project$Main$EndTurn = {ctor: 'EndTurn'};
var _user$project$Main$view = function (model) {
	var endTurnButton = A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$EndTurn),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('End Turn'),
			_1: {ctor: '[]'}
		});
	var empire = A2(
		_elm_lang$html$Html$h3,
		{ctor: '[]'},
		_elm_lang$core$List$singleton(
			_elm_lang$html$Html$text(
				_user$project$Gameboard$getTurnAsString(model.gameboard))));
	var phase = A2(
		_elm_lang$html$Html$h3,
		{ctor: '[]'},
		_elm_lang$core$List$singleton(
			_elm_lang$html$Html$text(
				_user$project$Gameboard$getPhaseAsString(model.gameboard))));
	var date = A2(
		_elm_lang$html$Html$h3,
		{ctor: '[]'},
		_elm_lang$core$List$singleton(
			_elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(model.gameboard.date))));
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: date,
					_1: {
						ctor: '::',
						_0: phase,
						_1: {
							ctor: '::',
							_0: empire,
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: endTurnButton,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
var _user$project$Main$Cancel = {ctor: 'Cancel'};
var _user$project$Main$SelectRetreat = function (a) {
	return {ctor: 'SelectRetreat', _0: a};
};
var _user$project$Main$SelectMove = function (a) {
	return {ctor: 'SelectMove', _0: a};
};
var _user$project$Main$SelectDisband = function (a) {
	return {ctor: 'SelectDisband', _0: a};
};
var _user$project$Main$SelectBuild = function (a) {
	return {ctor: 'SelectBuild', _0: a};
};
var _user$project$Main$SelectCapital = function (a) {
	return {ctor: 'SelectCapital', _0: a};
};
var _user$project$Main$SelectPiece = function (a) {
	return {ctor: 'SelectPiece', _0: a};
};
